plugins {
    id 'java-library'
    id 'application'
    id 'io.qameta.allure' version '2.9.6'
}

group 'cloud.autotests'
version '1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8
def allureVersion = "2.18.1"
defaultTasks 'help'

ext {
    allureVersion = "2.18.1"
    selenideVersion = "5.18.0"
    junitVersion = "5.7.0"
}

configurations {
    testCompile
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'junit:junit:4.13.1'

    testImplementation(
            "io.qameta.allure:allure-java-commons:2.18.1",
            "io.github.bonigarcia:webdrivermanager:5.8.0",
            "org.aspectj:aspectjweaver:1.9.5",
            "com.codeborne:selenide:${selenideVersion}",
            "io.qameta.allure:allure-selenide:${allureVersion}",
            "io.rest-assured:rest-assured:4.1.2",
            "io.qameta.allure:allure-rest-assured:${allureVersion}",
            "com.fasterxml.jackson.core:jackson-annotations:2.10.3",
            "io.appium:java-client:7.3.0",
            "ch.qos.logback:logback-classic:1.2.3",
            "org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

}

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties += System.properties
    systemProperty 'junit.jupiter.extensions.autodetection.enabled', 'true'
    if (System.hasProperty("web_threads")) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("web_threads").toInteger()
        ]
    }
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform {
        systemProperty 'junit.jupiter.execution.order.default', 'OrderAnnotation'
    }

}

task web(type: Test) {
    useJUnitPlatform {
        includeTags 'web'
    }
    systemProperty 'platform', 'web'
}

task signIn(type: Test) {
    useJUnitPlatform {
        includeTags 'signIn'
        systemProperty 'junit.jupiter.execution.order.default', 'OrderAnnotation'

    }
//    systemProperty 'platform', 'web'
}

task smoke(type: Test) {
    useJUnitPlatform {
        includeTags 'smoke'
    }
    systemProperty 'platform', 'web'
}
task qwer(type: Test) {
    useJUnitPlatform {
        includeTags 'qwer'
    }
    systemProperty 'platform', 'web'
}

//task addlocal(type: Test) {
//    useJUnitPlatform {
//        includeTags 'addlocal'
//    }
//    systemProperty 'platform', 'web'
//}
//
//task delLoc(type: Test) {
//    useJUnitPlatform {
//        includeTags 'delLoc'
//    }
//    systemProperty 'platform', 'web'
//}
//
//task order(type: Test) {
//    useJUnitPlatform {
//        includeTags 'order'
//    }
//    systemProperty 'platform', 'web'
//}

//task prod(type: Test) {
//    useJUnitPlatform {
//        includeTags 'prod'
//    }
//    systemProperty 'env', 'prod'
//}
//
//task android(type: Test) {
//    useJUnitPlatform {
//        includeTags 'android'
//    }
//    systemProperty 'platform', 'android'
//}
//
//task ios(type: Test) {
//    useJUnitPlatform {
//        includeTags 'ios'
//    }
//    systemProperty 'platform', 'ios'
//}

help {
    doFirst {
        println ""
        println "************************************************************************ "
        println "***                                                                  *** "
        println "*** Welcome to                                                       *** "
        println "*** https://github.com/autotests-cloud/selenide-junit5-allure-gradle *** "
        println "***                                                                  *** "
        println "***                                                                  *** "
        println "*** You can run tests by one of the following commands:              *** "
        println "*** ./gradlew web                                                    *** "
        println "*** ./gradlew android                                                *** "
        println "*** ./gradlew ios                                                    *** "
        println "***                                                                  *** "
        println "************************************************************************ "
        println ""
    }
}
